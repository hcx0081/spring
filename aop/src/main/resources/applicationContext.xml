<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- 目标对象 -->
    <!-- <bean id="target" class="com.spring.aopxml.TargetDaoImpl"></bean> -->
    
    <!-- 切面对象 -->
    <!-- <bean id="myAspect" class="com.spring.aopxml.MyAspect"></bean> -->
    <!-- 配置织入 -->
    <!-- <aop:config>
        &lt;!&ndash; 配置切面：切入点+通知 &ndash;&gt;
        <aop:aspect ref="myAspect">
            &lt;!&ndash; 配置切入点 &ndash;&gt;
            <aop:pointcut id="myPointCut" expression="execution(* com.spring.aopxml.*.*(..))"/>
            &lt;!&ndash; 前置通知 &ndash;&gt;
            <aop:before method="before" pointcut-ref="myPointCut"></aop:before>
            &lt;!&ndash; 后置通知 &ndash;&gt;
            <aop:after-returning method="afterReturning" pointcut-ref="myPointCut"></aop:after-returning>
            &lt;!&ndash; 环绕通知 &ndash;&gt;
            <aop:around method="around" pointcut-ref="myPointCut"></aop:around>
            &lt;!&ndash; 最终通知 &ndash;&gt;
            <aop:after method="after" pointcut-ref="myPointCut"></aop:after>
            &lt;!&ndash; 异常通知 &ndash;&gt;
            <aop:after-throwing method="throwing" pointcut-ref="myPointCut"></aop:after-throwing>
        </aop:aspect>
    </aop:config> -->
    
    
    <!-- 开启组件扫描 -->
    <context:component-scan base-package="com.spring.aopannotation"></context:component-scan>
    <!-- 开启基于注解的声明式AspectJ支持生成代理对象 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>


</beans>